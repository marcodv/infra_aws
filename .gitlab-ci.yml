# Include variables and stages
# from noah-pipelines-templates project 
include:
  - project: 'noah-energy/noah-pipelines-templates'
    file:    'variables.yml'
  - project: 'noah-energy/noah-pipelines-templates'
    file:    'terraform_tmpl.yml'

# Stage availables for this pipeline
stages:
  - run-security-scan 
  - infrastructure
  - kube-config
  - k8s-env

# Runs tfsec module scan from noah-pipelines-templates project
run-security-scan:
  stage: run-security-scan
  extends: .module_security_scan
  variables:
    PATH_TO_SCAN: "environments/test/"
  script: 
    - echo "Starting Terraform module security scan"

# Run terraform template job from noah-pipelines-templates project
infrastructure:
  stage: infrastructure
  extends: .terraform
  variables:
    AWS_PROFILE_ENV: $TF_USER_TEST_ENV
  script:
    - echo "Creating AWS Infra"
    - cd environments/test/
    - pwd
    - terraform init
    - terraform plan -var-file=test.tfvars -var="db_master_username=$POSTGRES_USER_TEST_ENV" -var="db_master_password=$POSTGRES_PASSWORD_TEST_ENV"
    - terraform apply -var-file=test.tfvars -var="db_master_username=$POSTGRES_USER_TEST_ENV" -var="db_master_password=$POSTGRES_PASSWORD_TEST_ENV" -auto-approve 

.kube-config-file:
  stage: kube-config
  image:    
    name: amazon/aws-cli
    entrypoint: [""]
  variables:
    AWS_PROFILE: $TF_USER_TEST_ENV
    CI_DEBUG_TRACE: "true"
  script:
    - unset AWS_SESSION_TOKEN
    - aws configure list
    - aws sts get-caller-identity
    - aws eks --region $AWS_REGION update-kubeconfig --name $CLUSTER_NAME

    - cp /root/.kube/config kube_config
    - chmod 777 kube_config
  artifacts:
    expose_as: 'kube_config'
    paths:
      - kube_config
  when: manual

kube-config-file-test-cluster:
  extends: .kube-config-file
  variables:
    AWS_REGION: eu-west-1
    CLUSTER_NAME: eks-test-env

.set-registry-keys:
  stage: k8s-env
  image: 
    name: amazon/aws-cli
    entrypoint: [""]
  variables:
    CI_DEBUG_TRACE: "true"
    KUBE_CONFIG_FILE: "./kube_config"
  before_script:
    - curl -LO https://dl.k8s.io/release/v1.23.0/bin/linux/amd64/kubectl
    - chmod +x kubectl
    - mv ./kubectl /usr/bin/kubectl
  script:
    - ls -alt .

    # create namespace if it does not exits
    - kubectl create namespace $NAMESPACE --dry-run=client -o yaml | kubectl apply -f - --kubeconfig=$KUBE_CONFIG_FILE
    # set docker registry-credentials for set namespace 
    - kubectl create secret docker-registry registry-credentials --docker-server=https://registry.gitlab.com --docker-username=$KUBE_PULL_USER --docker-password=$KUBE_PULL_SECRET --docker-email=$KUBE_PULL_EMAIL -n $NAMESPACE --kubeconfig=$KUBE_CONFIG_FILE
  when: manual

set_registry_keys_namespace_test:
  extends: .set_registry_keys
  dependencies: 
    - test-kube-config-file 
  variables:
    NAMESPACE: test
