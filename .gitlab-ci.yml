include:
  - project: 'noah-energy/noah-pipelines-templates'
    file:    'variables.yml'


stages:
  - build-docker
#  - test
#  - production
  - configure

build terraform image:
  stage: build-docker
  image: docker:latest
  services:
    - docker:dind
  script:
    - docker build -t hello .
  rules:
    - if: '$CI_COMMIT_BRANCH == "no_run"'



#deploy to test:
#  stage: test
#  environment: test

#deploy to prod:
#  stage: prod
#  environment: prod

.kube-config-file:
  stage: configure
  image: registry.gitlab.com/gitlab-org/cloud-deploy/aws-base:latest
  variables:
    AWS_PROFILE: $TF_USER_TEST_ENV
  script:
    - echo $AWS_REGION
    - echo $CLUSTER_NAME
    - echo $AWS_PROFILE
    - ls -alt .aws
    - cat .aws/credentials 
    - aws sts get-caller-identity --profile $AWS_PROFILE
    - aws eks --region $AWS_REGION update-kubeconfig --name $CLUSTER_NAME --profile $AWS_PROFILE
  artifacts:
    paths:
      - ~/.kube/config
  when: manual

test-kube-config-file:
  extends: .kube-config-file
  variables:
    AWS_REGION: eu-west-1
    CLUSTER_NAME: eks-test-env

.set_registry_keys:
  stage: configure
  image: bitnami/kubectl:1.22.5
  script:
    # create namespace if it does not exits
    - kubectl create namespace $NAMESPACE --dry-run=client -o yaml | kubectl apply -f -
    # set docker registry-credentials for set namespace 
    - kubectl create secret docker-registry registry-credentials --docker-server=https://registry.gitlab.com --docker-username=$KUBE_PULL_USER --docker-password=$KUBE_PULL_SECRET --docker-email=$KUBE_PULL_EMAIL -n $NAMESPACE
  when: manual

set_registry_keys_namespace_test:
  extends: .set_registry_keys
  dependencies: 
    - test-kube-config-file 
  variables:
    NAMESPACE: test

